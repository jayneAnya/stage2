version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app_blue
      - app_green
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL:-blue}

  app_blue:
    image: ${BLUE_IMAGE:-stage2-app:blue}
    expose:
      - "3000"
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE:-blue-1.0.0}
      - PORT=3000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/healthz"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 10s

  app_green:
    image: ${GREEN_IMAGE:-stage2-app:green}
    expose:
      - "3000"
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN:-green-1.0.0}
      - PORT=3000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/healthz"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 10s

  alert_watcher:
    image: python:3.9-alpine
    volumes:
    - nginx_logs:/var/log/nginx
    - ./watcher_simple.py:/app/watcher.py
    - ./requirements.txt:/app/requirements.txt
    working_dir: /app
    command: >
      sh -c "pip install -r requirements.txt && python watcher.py"
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD:-2}
      - WINDOW_SIZE=${WINDOW_SIZE:-200}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC:-300}
      - MAINTENANCE_MODE=${MAINTENANCE_MODE:-false}
    depends_on:
      - nginx
    restart: unless-stopped

volumes:
  nginx_logs: