events {
    worker_connections 1024;
}

http {
    log_format custom_log 'pool=$http_x_app_pool release=$http_x_release_id '
                         'upstream_status=$upstream_status '
                         'upstream_addr=$upstream_addr '
                         'request_time=$request_time '
                         'upstream_response_time=$upstream_response_time '
                         'remote_addr=$remote_addr '
                         'status=$status '
                         'request="$request"';

    access_log /var/log/nginx/access.log custom_log;

    upstream app_backend {
        server app_blue:3000 max_fails=2 fail_timeout=5s;
        server app_green:3000 backup;
    }

    map $upstream_http_x_app_pool $app_pool {
        default $upstream_http_x_app_pool;
        "" "unknown";
    }

    map $upstream_http_x_release_id $release_id {
        default $upstream_http_x_release_id;
        "" "unknown";
    }

    server {
        listen 80;

        location / {
            proxy_pass http://app_backend;

            # Timeout settings
            proxy_connect_timeout 2s;
            proxy_read_timeout 5s;
            proxy_send_timeout 2s;

            # Failover conditions
            proxy_next_upstream error timeout http_500 http_502 http_503;
            proxy_next_upstream_timeout 10s;
            proxy_next_upstream_tries 2;

            # Header management
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Pass through app headers for logging
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;

            # Ensure we don't buffer responses
            proxy_buffering off;
        }

        location /healthz {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}